{
  "name": "mini-map",
  "version": "1.0.0",
  "description": "A very small subset of ES6 Map that is good enough for small collections",
  "main": "mini-map.js",
  "directories": {
    "test": "test"
  },
  "devDependencies": {
    "jasminum": "^2.0.5"
  },
  "scripts": {
    "test": "jasminum test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/kriskowal/mini-map.git"
  },
  "author": {
    "name": "Kris Kowal",
    "email": "kris@cixar.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/kriskowal/mini-map/issues"
  },
  "homepage": "https://github.com/kriskowal/mini-map",
  "readme": "\n# MiniMap\n\nThe mini map implements a subset of the ECMAScript 6 Map that performs well\nenough for very small collections.\nThis implementation exists for a good-enough approximation of a Map that doesn't\nwaste much space even if an alternative is almost always used in practice.\nKeys may be objects.\nSupports `has`, `get`, `set`, `delete`, and `clear`.\nThe `MiniMap` constructor supports no arguments.\n\n```js\nvar map = new Map();\nvar key = {};\nexpect(map.has(key)).toBe(false);\nmap.set(key, 10);\nexpect(map.get(key)).toBe(10);\nexpect(map.has(key)).toBe(true);\nmap.delete(key);\nexpect(map.has(key)).toBe(false);\nmap.clear();\n```\n\n## License and Copyright\n\nCopyright (c) 2015 Kristopher Michael Kowal and contributors.\nAll rights reserved.\nMIT License.\n\n",
  "readmeFilename": "README.md",
  "_id": "mini-map@1.0.0",
  "_from": "mini-map@^1.0.0"
}
